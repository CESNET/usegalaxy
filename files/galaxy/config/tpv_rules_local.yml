global:
  default_inherits: default

tools:
  default:
    abstract: true
    cores: 1
    mem: cores * 4
    scheduling:
      require:
        - pulsar
  .*testing.*:
    cores: 2
    mem: cores * 4
    params:
      walltime: 8
    rules:
      - id: admin_only_testing_tool
        if: |
          # Only allow the tool to be executed if the user is an admin
          admin_users = app.config.admin_users
          # last line in block must evaluate to a value - which determines whether the TPV if conditional matches or not
          not user or user.email not in admin_users
        fail: Unauthorized. Only admins can execute this tool.

      - id: resource_params_defined
        if: |
          param_dict = job.get_param_values(app)
          param_dict.get('__job_resource', {}).get('__job_resource__select') == 'yes'
        cores: int(job.get_param_values(app)['__job_resource']['cores'])
        params:
           walltime: "{int(job.get_param_values(app)['__job_resource']['time'])}"
#  .*sra_tools.*:
#    scheduling:
#      require:
#        - local_env
#      reject:
#        - pulsar
#  .*/bwa/.*:
#    scheduling:
#      require:
#        - pulsar
#  .*/bwa_mem/.*:
#    scheduling:
#      require:
#        - pulsar
  .*/alphafold/.*:
    scheduling:
      require:
        - pulsar_gpu

roles:
  training.*:
    max_cores: 2
    max_mem: max_cores * 3.8  # TODO check multiplier
    scheduling:
      require:
        - pulsar
        - training

destinations:
  local_env:
    runner: local_runner
    max_accepted_cores: 1
    params:
      tmp_dir: true
    scheduling:
      require:
        - local_env
  singularity:
    runner: local_runner
    max_accepted_cores: 1
    params:
      singularity_enabled: true
    env:
      # Ensuring a consistent collation environment is good for reproducibility.
      LC_ALL: C
      # The cache directory holds the docker containers that get converted
      SINGULARITY_CACHEDIR: /tmp/singularity
      # Singularity uses a temporary directory to build the squashfs filesystem
      APPTAINER_TMPDIR: /tmp
  pulsar:
    runner: pulsar_runner
    max_accepted_cores: 128
    max_accepted_mem: 512
    max_accepted_gpus: 2
    max_cores: 16
    max_mem: 64
    max_gpus: 1
    params:
      default_file_action: remote_transfer
      dependency_resolution: remote
      jobs_directory: "/storage/praha5-elixir/home/galaxyeu/pulsar-cz/files/staging"
      persistence_directory: "/storage/praha5-elixir/home/galaxyeu/pulsar-cz/files/persistent"
      remote_metadata: false
      rewrite_parameters: true
      transport: curl
      outputs_to_working_directory: false
      singularity_enabled: true  
      singularity_volumes: "$job_directory:rw,$tool_directory:ro,$job_directory/outputs:rw,$working_directory:rw,/cvmfs/data.galaxyproject.org:ro,$SCRATCHDIR"
      container_resolvers:
        - type: explicit_singularity
        - type: mulled_singularity
    env:
      # Ensuring a consistent collation environment is good for reproducibility.
      - name: LC_ALL
        value: C
      - name: TMPDIR
        value: "$SCRATCHDIR"
      - name: TMP
        value: "$SCRATCHDIR"
      - name: TEMP
        value: "$SCRATCHDIR"
    scheduling:
      require:
        - pulsar
  pulsar_gpu:
    runner: pulsar_gpu_runner
    max_accepted_cores: 128
    max_accepted_mem: 512
    max_accepted_gpus: 2
    max_cores: 16
    max_mem: 64
    max_gpus: 1
    params:
      default_file_action: remote_transfer
      transport: curl
      dependency_resolution: remote
      jobs_directory: "/storage/praha5-elixir/home/galaxyeu/pulsar-cz/files/staging"
      persistence_directory: "/storage/praha5-elixir/home/galaxyeu/pulsar-cz/files/persistent"
      remote_metadata: false
      rewrite_parameters: true
      outputs_to_working_directory: false
      singularity_enabled: true
      singularity_run_extra_arguments: '--nv'
      singularity_volumes: '$job_directory:ro,$tool_directory:ro,$job_directory/outputs:rw,$working_directory:rw,$SCRATCHDIR,$ALPHAFOLD_DB:/data/2.3:ro'
    env:
      # The cache directory holds the docker containers that get converted
      - name: SINGULARITY_CACHEDIR
        value: "/storage/praha5-elixir/home/galaxyeu/singularity/cache"
      - name: APPTAINER_CACHEDIR
        value: "/storage/praha5-elixir/home/galaxyeu/singularity/cache"
      # Singularity uses a temporary directory to build the squashfs filesystem
      - name: SINGULARITY_TMPDIR
        value: "/storage/praha5-elixir/home/galaxyeu/singularity/tmp" 
      - name: APPTAINER_TMPDIR
        value: "/storage/praha5-elixir/home/galaxyeu/singularity/tmp"
      # Alphafold specific variables
      - name: ALPHAFOLD_DB
        value: "/storage/brno11-elixir/projects/alphafold/alphafold.db-2.3.1"
      # Default variables
      - name: TMPDIR
        value: "$SCRATCHDIR"
      - name: TMP
        value: "$SCRATCHDIR"
      - name: TEMP
        value: "$SCRATCHDIR"
      # Ensuring a consistent collation environment is good for reproducibility.
      - name: LC_ALL
        value: C
    scheduling:
      require:
        - pulsar
        - gpu
  pulsar-training:
    inherits: pulsar
    runner: pulsar_runner
    max_accepted_cores: 12
    max_accepted_mem: 120
    max_cores: 2 # Limit the cores
    max_mem: 8 # Limit the memory
    params:
      native_specification: --nodes=1 --ntasks=1 --mem={round(mem*1024)} --cpus-per-task={cores} --time=00:30:00
    scheduling:
      require:
        - pulsar
        - training
